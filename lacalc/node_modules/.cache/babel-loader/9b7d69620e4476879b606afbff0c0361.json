{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/lafe/lacalc/src/App.js\";\nimport React from 'react';\nimport convert from 'convert-units'; //import Container from '@material-ui/core/Container';\n\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'; //import Selector from './components/Selectors';\n\nimport InputField from './components/InputField';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputFields = event => {\n      event.preventDefault();\n\n      if (event.target.name === 'firstInput') {\n        this.setState({\n          firstInput: event.target.value,\n          flow: 'L2R'\n        }, () => this.handleConversion());\n      } else if (event.target.name === 'secondInput') {\n        this.setState({\n          secondInput: event.target.value,\n          flow: 'R2L'\n        }, () => this.handleConversion());\n      }\n    };\n\n    this.handleConversion = () => {\n      if (this.state.flow === 'L2R') {\n        this.setState({\n          secondInput: convert(this.state.firstInput).from(this.state.firstQuantity).to(this.state.secondQuantity)\n        });\n      } else if (this.state.flow === 'R2L') {\n        this.setState({\n          firstInput: convert(this.state.secondInput).from(this.state.secondQuantity).to(this.state.firstQuantity)\n        });\n      }\n    };\n\n    this.state = {\n      distance: 0,\n      gas: 0\n    };\n  }\n\n  render() {\n    console.log(convert().possibilities());\n    return React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      align: \"center\",\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      data: {\n        input: this.state.firstQuantity,\n        label: \"Distance\",\n        type: \"number\",\n        name: 'miles'\n      },\n      handleInput: this.handleInputFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(InputField, {\n      data: {\n        input: this.state.secondQuantity,\n        label: \"Gasolene\",\n        type: \"number\",\n        name: 'gallons'\n      },\n      handleInput: this.handleInputFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(PlayArrowIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/usr/src/app/lafe/lacalc/src/App.js"],"names":["React","convert","Grid","Fab","PlayArrowIcon","InputField","App","Component","constructor","handleInputFields","event","preventDefault","target","name","setState","firstInput","value","flow","handleConversion","secondInput","state","from","firstQuantity","to","secondQuantity","distance","gas","render","console","log","possibilities","input","label","type"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport convert from 'convert-units';\n\n//import Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n//import Selector from './components/Selectors';\nimport InputField from './components/InputField';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            distance: 0,\n            gas: 0\n        }\n    }\n\n    handleInputFields = event => {\n        event.preventDefault();\n        if(event.target.name === 'firstInput') {\n            this.setState({\n                firstInput: event.target.value,\n                flow: 'L2R'\n            },\n            () => this.handleConversion())\n        }\n        else if(event.target.name === 'secondInput') {\n            this.setState({\n                secondInput: event.target.value,\n                flow: 'R2L'\n            },\n            () => this.handleConversion())\n        }\n    }\n\n    handleConversion = () => {\n        if(this.state.flow === 'L2R') {\n            this.setState({\n                secondInput: convert(this.state.firstInput).from(this.state.firstQuantity).to(this.state.secondQuantity)\n            })\n        }\n        else if(this.state.flow === 'R2L') {\n            this.setState({\n                firstInput: convert(this.state.secondInput).from(this.state.secondQuantity).to(this.state.firstQuantity)\n            })\n        }\n    }\n\n    render() {\n        console.log(convert().possibilities())\n        return (\n                <Grid container justify='center' align='center' spacing={3}>\n                    <InputField data={{  \n                                        input: this.state.firstQuantity, \n                                        label: \"Distance\",\n                                        type: \"number\",\n                                        name: 'miles' }} \n                                handleInput={this.handleInputFields} />\n\n                    <InputField data={{  \n                                        input: this.state.secondQuantity, \n                                        label: \"Gasolene\",\n                                        type: \"number\",\n                                        name: 'gallons' }} \n                                handleInput={this.handleInputFields} />\n                    <Grid item xs={10}>\n                        <Fab color=\"primary\" aria-label=\"play\" >\n                            <PlayArrowIcon />\n                        </Fab>\n                    </Grid>\n                </Grid>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}