{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/lafe/lacalc/src/App.js\";\nimport React from 'react';\nimport convert from 'convert-units'; //import Container from '@material-ui/core/Container';\n\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'; //import Selector from './components/Selectors';\n\nimport InputField from './components/InputField';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputFields = event => {\n      event.preventDefault();\n      console.log(event.target.name);\n      console.log(event.target.value);\n\n      if (event.target.name === 'dist') {\n        this.setState({\n          distance: event.target.value\n        });\n      } else if (event.target.name === 'gallons') {\n        this.setState({\n          gas: event.target.value\n        });\n      }\n\n      if (this.state.gas > 0) {\n        let tmp = this.state.distance / event.target.value;\n        this.setState({\n          mpg: tmp\n        });\n      }\n\n      console.log(\"mpg : \" + this.state.mpg);\n      console.log(\"gas : \" + this.state.gas);\n      console.log(\"distance : \" + this.state.distance);\n    };\n\n    this.state = {\n      distance: 0,\n      gas: 0,\n      mpg: 0\n    };\n  }\n\n  render() {\n    //console.log(convert().possibilities())\n    return React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      align: \"center\",\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      data: {\n        input: this.state.firstQuantity,\n        label: \"Distance\",\n        type: \"number\",\n        name: 'dist'\n      },\n      handleInput: this.handleInputFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(InputField, {\n      data: {\n        input: this.state.secondQuantity,\n        label: \"Gasolene\",\n        type: \"number\",\n        name: 'gallons'\n      },\n      handleInput: this.handleInputFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(PlayArrowIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Fab, {\n      variant: \"extended\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Extended\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/usr/src/app/lafe/lacalc/src/App.js"],"names":["React","convert","Grid","Fab","PlayArrowIcon","InputField","App","Component","constructor","handleInputFields","event","preventDefault","console","log","target","name","value","setState","distance","gas","state","tmp","mpg","render","input","firstQuantity","label","type","secondQuantity","classes","margin"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport convert from 'convert-units';\n\n//import Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n//import Selector from './components/Selectors';\nimport InputField from './components/InputField';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            distance: 0,\n            gas: 0,\n            mpg: 0\n        }\n    }\n\n    handleInputFields = (event) => {\n        event.preventDefault();\n        console.log(event.target.name);\n        console.log(event.target.value);\n        if(event.target.name === 'dist') {\n            this.setState({distance: event.target.value})\n        } else if (event.target.name === 'gallons') {\n            this.setState({gas: event.target.value})\n        }\n        if (this.state.gas > 0) {\n            let tmp = this.state.distance/event.target.value;\n            this.setState({mpg: tmp})\n        }\n\nconsole.log(\"mpg : \" + this.state.mpg);\nconsole.log(\"gas : \" + this.state.gas);\nconsole.log(\"distance : \" + this.state.distance);\n    }\n\n    render() {\n        //console.log(convert().possibilities())\n        return (\n                <Grid container justify='center' align='center' spacing={3}>\n                    <InputField data={{  \n                                        input: this.state.firstQuantity, \n                                        label: \"Distance\",\n                                        type: \"number\",\n                                        name: 'dist' }} \n                                handleInput={this.handleInputFields} />\n\n                    <InputField data={{  \n                                        input: this.state.secondQuantity, \n                                        label: \"Gasolene\",\n                                        type: \"number\",\n                                        name: 'gallons' }} \n                                handleInput={this.handleInputFields} />\n\n                    <Grid item xs={10}>\n                        <Fab color=\"primary\" aria-label=\"play\" >\n                            <PlayArrowIcon />\n                        </Fab>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Fab variant=\"extended\" color=\"primary\" aria-label=\"add\" className={classes.margin}>\n                            Extended\n                        </Fab>\n                    </Grid>\n                </Grid>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}