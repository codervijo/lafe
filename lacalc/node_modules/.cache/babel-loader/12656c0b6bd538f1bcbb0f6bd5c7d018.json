{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/lafe/lacalc/src/App.js\";\nimport React from 'react';\nimport convert from 'convert-units';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper'; //import Selector from './components/Selectors';\n\nimport InputField from './components/InputField';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.generateMainSelector = () => {\n      return convert().measures().map(ele => ele[0].toUpperCase() + ele.slice(1));\n    };\n\n    this.handleMainSelector = event => {\n      event.preventDefault();\n      this.setState({\n        distance: 0,\n        gas: 0\n      });\n    };\n\n    this.handleSelector = event => {\n      this.setState({\n        [event.target.name]: event.target.value,\n        firstInput: 0,\n        secondInput: 0\n      });\n    };\n\n    this.handleInputFields = event => {\n      event.preventDefault();\n\n      if (event.target.name === 'firstInput') {\n        this.setState({\n          firstInput: event.target.value,\n          flow: 'L2R'\n        }, () => this.handleConversion());\n      } else if (event.target.name === 'secondInput') {\n        this.setState({\n          secondInput: event.target.value,\n          flow: 'R2L'\n        }, () => this.handleConversion());\n      }\n    };\n\n    this.handleConversion = () => {\n      if (this.state.flow === 'L2R') {\n        this.setState({\n          secondInput: convert(this.state.firstInput).from(this.state.firstQuantity).to(this.state.secondQuantity)\n        });\n      } else if (this.state.flow === 'R2L') {\n        this.setState({\n          firstInput: convert(this.state.secondInput).from(this.state.secondQuantity).to(this.state.firstQuantity)\n        });\n      }\n    };\n\n    this.state = {\n      distance: 0,\n      gas: 0\n    };\n  }\n\n  render() {\n    const classes = useStyles();\n    console.log(convert().possibilities());\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"xs=12\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"xs=12 sm=6\")), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"xs=12 sm=6\")), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"xs=6 sm=3\")), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"xs=6 sm=3\")), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"xs=6 sm=3\")), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      sm: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"xs=6 sm=3\")), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      align: \"center\",\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(InputField, {\n      data: {\n        input: this.state.firstQuantity,\n        label: \"Distance\",\n        type: \"number\",\n        name: 'miles'\n      },\n      handleInput: this.handleInputFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(InputField, {\n      data: {\n        input: this.state.secondQuantity,\n        label: \"Gasolene\",\n        type: \"number\",\n        name: 'gallons'\n      },\n      handleInput: this.handleInputFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/usr/src/app/lafe/lacalc/src/App.js"],"names":["React","convert","Container","Grid","Paper","InputField","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","App","Component","constructor","generateMainSelector","measures","map","ele","toUpperCase","slice","handleMainSelector","event","preventDefault","setState","distance","gas","handleSelector","target","name","value","firstInput","secondInput","handleInputFields","flow","handleConversion","state","from","firstQuantity","to","secondQuantity","render","classes","console","log","possibilities","input","label","type"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport convert from 'convert-units';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n//import Selector from './components/Selectors';\nimport InputField from './components/InputField';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            distance: 0,\n            gas: 0\n        }\n    }\n\n\n\n    generateMainSelector = () => {\n        return (\n            convert().measures()\n                .map(ele => ele[0].toUpperCase() + ele.slice(1))\n        )\n    }\n\n    handleMainSelector = event => {\n        event.preventDefault();\n        this.setState({\n            distance: 0,\n            gas:0\n        })\n    }\n\n    handleSelector = event => {\n        this.setState({[event.target.name]: event.target.value, firstInput: 0, secondInput: 0})\n    }\n\n    handleInputFields = event => {\n        event.preventDefault();\n        if(event.target.name === 'firstInput') {\n            this.setState({\n                firstInput: event.target.value,\n                flow: 'L2R'\n            },\n            () => this.handleConversion())\n        }\n        else if(event.target.name === 'secondInput') {\n            this.setState({\n                secondInput: event.target.value,\n                flow: 'R2L'\n            },\n            () => this.handleConversion())\n        }\n    }\n\n    handleConversion = () => {\n        if(this.state.flow === 'L2R') {\n            this.setState({\n                secondInput: convert(this.state.firstInput).from(this.state.firstQuantity).to(this.state.secondQuantity)\n            })\n        }\n        else if(this.state.flow === 'R2L') {\n            this.setState({\n                firstInput: convert(this.state.secondInput).from(this.state.secondQuantity).to(this.state.firstQuantity)\n            })\n        }\n    }\n\n    render() {\n          const classes = useStyles();\n\n        console.log(convert().possibilities())\n        return (\n                  <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>xs=12</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>xs=12 sm=6</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}>xs=6 sm=3</Paper>\n        </Grid>\n\n                <Grid container justify='center' align='center' spacing={3}>\n                    <InputField data={{  \n                                        input: this.state.firstQuantity, \n                                        label: \"Distance\",\n                                        type: \"number\",\n                                        name: 'miles' }} \n                                handleInput={this.handleInputFields} />\n                    <InputField data={{  \n                                        input: this.state.secondQuantity, \n                                        label: \"Gasolene\",\n                                        type: \"number\",\n                                        name: 'gallons' }} \n                                handleInput={this.handleInputFields} />\n                </Grid>\n                      </Grid>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}